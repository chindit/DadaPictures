security:
    role_hierarchy:
        ROLE_EDITOR:      ROLE_USER
        ROLE_ADMIN:       [ROLE_USER, ROLE_EDITOR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        public:
            pattern: ^/api/(register|public)
            security: false
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
        main:
            pattern: ^/
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UserAuthenticator
            logout:
                path: app_logout

    access_control:
        - { path: ^/login$, role: PUBLIC_ACCESS }
        - { path: ^/register, role: PUBLIC_ACCESS }
        - { path: ^/resetting, role: PUBLIC_ACCESS }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/tag/new, role: ROLE_ADMIN }
        - { path: ^/tag/\d+/edit, role: ROLE_ADMIN }
        - { path: ^/pack/, role: ROLE_USER }
        - { path: ^/picture/tag/, role: ROLE_USER }
        - { path: ^/api/login$, role: PUBLIC_ACCESS }
        - { path: ^/api/register$, role: PUBLIC_ACCESS }
        - { path: ^/api/public/galleries/latest$, role: PUBLIC_ACCESS }
        - { path: ^/api/tag/create$, role: ROLE_EDITOR }
        - { path: ^/api/picture/\S+/tag, role: ROLE_EDITOR }
        - { path: ^/api/, role: ROLE_USER }
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
